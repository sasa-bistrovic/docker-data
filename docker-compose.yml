version: '3'
services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_BROKER_ID: "0"
      KAFKA_LOG_DIRS: "/tmp/kafka-logs"
      KAFKA_NUM_NETWORK_THREADS: "3"
      KAFKA_NUM_IO_THREADS: "8"
      KAFKA_SOCKET_SEND_BUFFER_BYTES: "102400"
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: "102400"
      KAFKA_SOCKET_REQUEST_MAX_BYTES: "104857600"
      KAFKA_NUM_PARTITIONS: "1"
      KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_LOG_RETENTION_HOURS: "168"
      KAFKA_LOG_SEGMENT_BYTES: "1073741824"
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: "300000"
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: "18000"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper  
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ALLOW_ANONYMOUS_LOGIN: "yes"

  rabbitmq:
    image: bitnami/rabbitmq:latest
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
    volumes:
      - ./spring-boot-rabbitmq/rabbitmq.conf:/opt/bitnami/rabbitmq/etc/rabbitmq/rabbitmq.conf
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin      

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    hostname: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - cluster.name=elasticsearch
      - xpack.security.enabled=false
      
  redis:
    image: bitnami/redis:latest
    container_name: redis
    hostname: redis
    environment:
      - ALLOW_EMPTY_PASSWORD="yes"
    ports:
      - "6379:6379"
    volumes:
      - ./spring-boot-redis/redis.conf:/opt/bitnami/redis/conf/redis.conf
      - ./spring-boot-redis/redis-data:/bitnami/redis/data
      - ./spring-boot-redis/redis-logs:/bitnami/redis/logs       
    command: ["redis-server", "/opt/bitnami/redis/conf/redis.conf"]

  spring-boot-kafka:
    build: ./spring-boot-kafka
    container_name: spring-boot-kafka
    image: docker-data-spring-boot-kafka
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      - SPRING_KAFKA_URL=kafka:9092
      - SPRING_KAFKA_TOPIC=item-topic

  spring-boot-rabbitmq: 
    build: ./spring-boot-rabbitmq
    container_name: spring-boot-rabbitmq
    image: docker-data-spring-boot-rabbitmq
    ports:
      - "8081:8081"
    depends_on:
      - rabbitmq
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PASSWORD=admin       

  spring-boot-elasticsearch:
    build: ./spring-boot-elasticsearch
    container_name: spring-boot-elasticsearch
    image: docker-data-spring-boot-elasticsearch
    ports:
      - "8082:8082"
    depends_on:
      - elasticsearch     
    environment:
      - SPRING_ELASTICSEARCH_URL=elasticsearch:9200

  spring-boot-redis:
    build: ./spring-boot-redis
    container_name: spring-boot-redis
    image: docker-data-spring-boot-redis
    ports:
      - "8083:8083"
    depends_on:
      - redis   
    environment:
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=my_password_example